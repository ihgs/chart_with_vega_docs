import"./style-CMkGO_Nm.js";import{r as s,j as t,c as v}from"./index-rQnCqdvM.js";import{c as b,C as x,M as j,O as w,a as _,b as C,d as S,e as M}from"./common-DAxQJd86.js";import{C as A,G as O,M as $}from"./miro-BztXybb3.js";const E=["year","A","B"],I=[["2020",28,22],["2021",55,30],["2022",43,60]],P={$schema:"https://vega.github.io/schema/vega-lite/v5.json",description:"A simple bar chart data.",width:400,height:200,data:{values:"/** don't modify as it will be automatically inserted. **/"},transform:[{fold:["A","B"],as:["category","value"]}],mark:"bar",encoding:{x:{field:"year",type:"nominal"},y:{field:"value",type:"quantitative"},xOffset:{field:"category",type:"nominal"},color:{field:"category",type:"nominal"}}},D=Object.freeze(Object.defineProperty({__proto__:null,columns:E,spec:P,table:I},Symbol.toStringTag,{value:"Module"})),L=["year","value"],N=[["2020",55],["2021",43],["2022",55],["2023",23],["2024",34]],T={$schema:"https://vega.github.io/schema/vega-lite/v5.json",description:"A simple line chart.",width:400,height:200,data:{values:"/** don't modify as it will be automatically inserted. **/"},mark:"line",encoding:{x:{field:"year",type:"temporal"},y:{field:"value",type:"quantitative"}}},k=Object.freeze(Object.defineProperty({__proto__:null,columns:L,spec:T,table:N},Symbol.toStringTag,{value:"Module"})),q=["category","value"],z=[[1,4],[2,6],[3,10],[4,3],[5,7],[6,8]],B={$schema:"https://vega.github.io/schema/vega-lite/v5.json",description:"A simple pie chart with embedded data.",width:300,height:300,data:{values:"/** don't modify as it will be automatically inserted. **/"},mark:"arc",encoding:{theta:{field:"value",type:"quantitative"},color:{field:"category",type:"nominal"}}},R=Object.freeze(Object.defineProperty({__proto__:null,columns:q,spec:B,table:z},Symbol.toStringTag,{value:"Module"})),G=["x","y"],U=[[23,55],[11,43],[22,55],[33,23],[10,34],[5,4],[21,70],[33,22],[18,21]],V={$schema:"https://vega.github.io/schema/vega-lite/v5.json",description:"A scatterplot showing horsepower and miles per gallons for various cars.",data:{values:"/** don't modify as it will be automatically inserted. **/"},width:400,height:400,mark:"point",encoding:{x:{field:"x",type:"quantitative"},y:{field:"y",type:"quantitative"}}},F=Object.freeze(Object.defineProperty({__proto__:null,columns:G,spec:V,table:U},Symbol.toStringTag,{value:"Module"})),H=n(D),W=n(k),J=n(R),K=n(F),Q={bar_chart:H,line_chart:W,pie_chart:J,scatter_chart:K};function n({columns:r,spec:a,table:o}){const i=o.concat([...Array(100-o.length)].map(()=>[,])).map(c=>c.map(l=>({value:l})));return new A({data:i,columns:r,spec:a})}const X=100,Y=4;b(X,Y);function Z(){const[r,a]=s.useState(!1),o=s.useContext(x);if(!o)throw new Error("ChartDataContext is not provided");const{data:m,columns:i,setData:c,setColumns:l,spec:h,setSpec:g}=o,p=s.useContext(j);if(!p)throw new Error("MessageContext is not provided");const{setMessage:u}=p;s.useEffect(()=>{const f=new URL(window.location.href).searchParams.get("chart"),d=Q[f||"bar_chart"];l(d.columns),c(d.data),g(d.prettierSpec())},[]);async function y(){try{const e=new O;a(!0),await e.addGraph(i,m,h),a(!1),await miro.board.ui.closeModal()}catch(e){console.warn(e),e instanceof $?u({error:e,detail:e}):u({message:"Vega-Lite specification is invalid.",detail:e}),a(!1)}}return t.jsxs(t.Fragment,{children:[r&&t.jsx(w,{}),t.jsx("div",{children:t.jsx("div",{style:{textAlign:"right"},children:t.jsx("button",{className:"button button-primary button-small",style:{marginBottom:3},onClick:y,children:"Add to Board"})})})]})}const tt=()=>t.jsx("div",{className:"",children:t.jsxs(_,{children:[t.jsx(C,{}),t.jsxs(S,{children:[t.jsx(Z,{}),t.jsx(M,{})]})]})}),et=document.getElementById("root"),at=v.createRoot(et);at.render(t.jsx(tt,{}));
