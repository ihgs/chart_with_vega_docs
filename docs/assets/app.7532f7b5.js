import"./style.a87c9e06.js";import{r as n,j as m,F as b,a as t,c as w}from"./jsx-runtime.9f138595.js";import{c as x,C as _,M as C,O as S,a as j,b as M,d as A,e as O}from"./common.d6780a8e.js";import{C as $,G as I,M as P}from"./miro.39761233.js";const D=["year","A","B"],E=[["2020",28,22],["2021",55,30],["2022",43,60]],L={$schema:"https://vega.github.io/schema/vega-lite/v5.json",description:"A simple bar chart data.",width:400,height:200,data:{values:"/** don't modify as it will be automatically inserted. **/"},transform:[{fold:["A","B"],as:["category","value"]}],mark:"bar",encoding:{x:{field:"year",type:"nominal"},y:{field:"value",type:"quantitative"},xOffset:{field:"category",type:"nominal"},color:{field:"category",type:"nominal"}}},N=Object.freeze(Object.defineProperty({__proto__:null,spec:L,columns:D,table:E},Symbol.toStringTag,{value:"Module"})),T=["year","value"],k=[["2020",55],["2021",43],["2022",55],["2023",23],["2024",34]],q={$schema:"https://vega.github.io/schema/vega-lite/v5.json",description:"A simple line chart.",width:400,height:200,data:{values:"/** don't modify as it will be automatically inserted. **/"},mark:"line",encoding:{x:{field:"year",type:"temporal"},y:{field:"value",type:"quantitative"}}},z=Object.freeze(Object.defineProperty({__proto__:null,spec:q,columns:T,table:k},Symbol.toStringTag,{value:"Module"})),B=["category","value"],R=[[1,4],[2,6],[3,10],[4,3],[5,7],[6,8]],G={$schema:"https://vega.github.io/schema/vega-lite/v5.json",description:"A simple pie chart with embedded data.",width:300,height:300,data:{values:"/** don't modify as it will be automatically inserted. **/"},mark:"arc",encoding:{theta:{field:"value",type:"quantitative"},color:{field:"category",type:"nominal"}}},F=Object.freeze(Object.defineProperty({__proto__:null,spec:G,columns:B,table:R},Symbol.toStringTag,{value:"Module"})),U=["x","y"],V=[[23,55],[11,43],[22,55],[33,23],[10,34],[5,4],[21,70],[33,22],[18,21]],H={$schema:"https://vega.github.io/schema/vega-lite/v5.json",description:"A scatterplot showing horsepower and miles per gallons for various cars.",data:{values:"/** don't modify as it will be automatically inserted. **/"},width:400,height:400,mark:"point",encoding:{x:{field:"x",type:"quantitative"},y:{field:"y",type:"quantitative"}}},W=Object.freeze(Object.defineProperty({__proto__:null,spec:H,columns:U,table:V},Symbol.toStringTag,{value:"Module"})),J=s(N),K=s(z),Q=s(F),X=s(W),Y={bar_chart:J,line_chart:K,pie_chart:Q,scatter_chart:X};function s({columns:r,spec:o,table:a}){const i=a.concat([...Array(100-a.length)].map(()=>[,])).map(c=>c.map(l=>({value:l})));return new $({data:i,columns:r,spec:o})}const Z=100,tt=4;x(Z,tt);function et(){const[r,o]=n.exports.useState(!1),a=n.exports.useContext(_);if(!a)throw new Error("ChartDataContext is not provided");const{data:p,columns:i,setData:c,setColumns:l,spec:g,setSpec:y}=a,u=n.exports.useContext(C);if(!u)throw new Error("MessageContext is not provided");const{setMessage:h}=u;n.exports.useEffect(()=>{const f=new URL(window.location.href).searchParams.get("chart"),d=Y[f||"bar_chart"];l(d.columns),c(d.data),y(d.prettierSpec())},[]);async function v(){try{const e=new I;o(!0),await e.addGraph(i,p,g),await miro.board.ui.closeModal()}catch(e){console.warn(e),e instanceof P?h({error:e,detail:e}):h({message:"Vega-Lite specification is invalid.",detail:e}),o(!1)}}return m(b,{children:[r&&t(S,{}),t("div",{children:t("div",{style:{textAlign:"right"},children:t("button",{className:"button button-primary button-small",style:{marginBottom:3},onClick:v,children:"Add to Board"})})})]})}const at=()=>t("div",{className:"",children:m(j,{children:[t(M,{}),m(A,{children:[t(et,{}),t(O,{})]})]})}),ot=document.getElementById("root"),nt=w(ot);nt.render(t(at,{}));
