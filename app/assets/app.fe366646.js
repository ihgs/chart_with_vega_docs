import"./style.a87c9e06.js";import{r as n,j as m,F as b,a as t,c as w}from"./jsx-runtime.9f138595.js";import{c as x,C as _,M as C,O as S,a as j,b as A,d as M,e as O}from"./common.4c673f71.js";import{C as $,G as I}from"./miro.a87bf8a1.js";const P=["year","A","B"],N=[["2020",28,22],["2021",55,30],["2022",43,60]],T={$schema:"https://vega.github.io/schema/vega-lite/v5.json",description:"A simple bar chart data.",width:400,height:200,data:{values:"/** don't modify as it will be automatically inserted. **/"},transform:[{fold:["A","B"],as:["category","value"]}],mark:"bar",encoding:{x:{field:"year",type:"nominal"},y:{field:"value",type:"quantitative"},xOffset:{field:"category",type:"nominal"},color:{field:"category",type:"nominal"}}},k=Object.freeze(Object.defineProperty({__proto__:null,spec:T,columns:P,table:N},Symbol.toStringTag,{value:"Module"})),q=["year","value"],B=[["2020",55],["2021",43],["2022",55],["2023",23],["2024",34]],D={$schema:"https://vega.github.io/schema/vega-lite/v5.json",description:"A simple line chart.",width:400,height:200,data:{values:"/** don't modify as it will be automatically inserted. **/"},mark:"line",encoding:{x:{field:"year",type:"temporal"},y:{field:"value",type:"quantitative"}}},E=Object.freeze(Object.defineProperty({__proto__:null,spec:D,columns:q,table:B},Symbol.toStringTag,{value:"Module"})),L=["category","value"],z=[[1,4],[2,6],[3,10],[4,3],[5,7],[6,8]],R={$schema:"https://vega.github.io/schema/vega-lite/v5.json",description:"A simple pie chart with embedded data.",width:300,height:300,data:{values:"/** don't modify as it will be automatically inserted. **/"},mark:"arc",encoding:{theta:{field:"value",type:"quantitative"},color:{field:"category",type:"nominal"}}},G=Object.freeze(Object.defineProperty({__proto__:null,spec:R,columns:L,table:z},Symbol.toStringTag,{value:"Module"})),F=["x","y"],U=[[23,55],[11,43],[22,55],[33,23],[10,34],[5,4],[21,70],[33,22],[18,21]],H={$schema:"https://vega.github.io/schema/vega-lite/v5.json",description:"A scatterplot showing horsepower and miles per gallons for various cars.",data:{values:"/** don't modify as it will be automatically inserted. **/"},width:400,height:400,mark:"point",encoding:{x:{field:"x",type:"quantitative"},y:{field:"y",type:"quantitative"}}},V=Object.freeze(Object.defineProperty({__proto__:null,spec:H,columns:F,table:U},Symbol.toStringTag,{value:"Module"})),W=s(k),J=s(E),K=s(G),Q=s(V),X={bar_chart:W,line_chart:J,pie_chart:K,scatter_chart:Q};function s({columns:r,spec:a,table:e}){const i=e.concat([...Array(100-e.length)].map(()=>[,])).map(c=>c.map(l=>({value:l})));return new $({data:i,columns:r,spec:a})}const Y=100,Z=4;x(Y,Z);function tt(){const[r,a]=n.exports.useState(!1),e=n.exports.useContext(_);if(!e)throw new Error("ChartDataContext is not provided");const{data:p,columns:i,setData:c,setColumns:l,spec:h,setSpec:g}=e,u=n.exports.useContext(C);if(!u)throw new Error("MessageContext is not provided");const{setMessage:y}=u;n.exports.useEffect(()=>{const f=new URL(window.location.href).searchParams.get("chart"),d=X[f||"bar_chart"];l(d.columns),c(d.data),g(d.prettierSpec())},[]);async function v(){try{const o=new I;a(!0),await o.addGraph(i,p,h),await miro.board.ui.closeModal()}catch(o){a(!1),y({message:"Invalid specificatin",detail:o})}}return m(b,{children:[r&&t(S,{}),t("div",{children:t("div",{style:{textAlign:"right"},children:t("button",{className:"button button-primary button-small",style:{marginBottom:3},onClick:v,children:"Add to Board"})})})]})}const et=()=>t("div",{className:"",children:m(j,{children:[t(A,{}),m(M,{children:[t(tt,{}),t(O,{})]})]})}),at=document.getElementById("root"),ot=w(at);ot.render(t(et,{}));
